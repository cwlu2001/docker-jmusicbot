name: Docker CI

on:
  workflow_dispatch:
#  schedule:
#    - cron:  '33 3 * * 3'

jobs:
  check:
    runs-on: ubuntu-22.04
    outputs:
      is_update: ${{ steps.check_ver.outputs.is_update }}
    steps:
      - name: Check update
        id: check_update
        uses: mogeko/latest-version@v1.1.2
        with:
          repo: jagrosh/MusicBot

  get_metadata:
    runs-on: ubuntu-22.04
    needs: check
    if: ${{ needs.check.outputs.is_update == 'true' }} || ${{ github.event_name == 'workflow_dispatch' }}
    outputs:
      tag: ${{ steps.get_metadata.outputs.TAG }}
      dl_url: ${{ steps.get_metadata.outputs.DL_URL }}

    steps:
      - name: Get metadata
        id: get_metadata
        run: |
          curl -s https://api.github.com/repos/jagrosh/MusicBot/releases/latest > response
          printf 'TAG=%s' "$(cat response | jq -r '.tag_name')" >> $GITHUB_OUTPUT
          printf 'DL_URL=%s' "$(cat response | jq -r '.assets[0].browser_download_url')" >> $GITHUB_OUTPUT
  build:
    runs-on: ubuntu-22.04
    needs: ["check", "get_metadata"]
    if: ${{ needs.check.outputs.is_update == 'true' }} || ${{ github.event_name == 'workflow_dispatch' }}
    steps:
      - uses: actions/checkout@v4.1.1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Set up Docker metadata
        id: meta
        uses: docker/metadata-action@v5.0.0
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/jmusicbot
          tags: |
            latest,enable=${{ github.ref_name == 'master' }}
            ${{ github.ref_name }},enable=${{ github.ref_name != 'master' }}
            ${{ needs.get_metadata.outputs.tag }},enable=${{ github.ref_name == 'master' }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          provenance: false
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            DL_URL=${{ needs.get_metadata.outputs.dl_url }}

      - name: Update Docker Hub README
        uses: peter-evans/dockerhub-description@v3.4.2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ secrets.DOCKER_USERNAME }}/jmusicbot
          readme-filepath: ./README.md
